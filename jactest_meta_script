# bash script to run jactest_mp with different multiprocessing settings

# mode choices=(widefov narrowfov spectroscopy nfov_dm nfov_flat)
mode=spectroscopy

TIMEFORMAT='%1R, %1U'
mkl_num_threads=(1 4 8)
nprocesses=(8 16 0) # 0 => number of cores

echo mode, N_processes, mkl_num_threads, time_seconds, real, user


# logfn="log_${HOSTSHORT}_${mode}.txt"
# if test -f "$logfn"; then
#    rm $logfn
# fi

# first run with 1 process and default mkl threads
start=$SECONDS
time_result=$(time (python3.7 jactest_mp.py --mode $mode) 2>&1)
duration=($(( SECONDS - start )))

str="${mode}, None, None, ${duration}, ${time_result}"
echo $str

# loop through list of num_threads and list of nprocesses
for num_threads in ${mkl_num_threads[@]}; do

    for pp in ${nprocesses[@]}; do

        start=$SECONDS
        time_result=$(time (python3.7 jactest_mp.py --mode $mode -p $pp --num_threads $num_threads) 2>&1)
        duration=($(( SECONDS - start )))

        str="${mode}, ${pp}, ${num_threads}, ${duration}, ${time_result}"
        echo $str

    done # for nprocesses
done # num_threads

### pythonspeed.com/articles/parallelism-slower/
# from threadpoolctl import threadpool_limits
# with threadpool_limits(limits=1, user_api='blas'):
# 
# multiprocessing tools:
# >>> import multiprocessing
# >>> import joblib
# >>> import Dask # (author's favorite)
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# ModuleNotFoundError: No module named 'Dask'
#
# try:
# >>> import mkl
# >>> mkl.set_num_threads(1)
